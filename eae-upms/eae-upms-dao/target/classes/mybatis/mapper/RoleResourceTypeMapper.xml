<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.eae.upms.dao.RoleResourceTypeDao">

	<select id="get" resultType="me.eae.upms.model.RoleResourceTypeDO">
		select `id`,`role_id`,`resource_type_id` from blog_role_resource_type where id = #{value}
	</select>

	<select id="list" resultType="me.eae.upms.model.RoleResourceTypeDO">
		select `id`,`role_id`,`resource_type_id` from blog_role_resource_type
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
		  		  <if test="resourceTypeId != null and resourceTypeId != ''"> and resource_type_id = #{resourceTypeId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from blog_role_resource_type
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
		  		  <if test="resourceTypeId != null and resourceTypeId != ''"> and resource_type_id = #{resourceTypeId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="me.eae.upms.model.RoleResourceTypeDO" useGeneratedKeys="true" keyProperty="id">
		insert into blog_role_resource_type
		(
			`role_id`, 
			`resource_type_id`
		)
		values
		(
			#{roleId}, 
			#{resourceTypeId}
		)
	</insert>
	 
	<update id="update" parameterType="me.eae.upms.model.RoleResourceTypeDO">
		update blog_role_resource_type 
		<set>
			<if test="roleId != null">`role_id` = #{roleId}, </if>
			<if test="resourceTypeId != null">`resource_type_id` = #{resourceTypeId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from blog_role_resource_type where id = #{value}
	</delete>
	<delete id="removeByRoleId">
		delete from blog_role_resource_type where role_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from blog_role_resource_type where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	<select id="listResourceTypeByRoleId" resultType="long">
		select resource_type_id from blog_role_resource_type
		<where>role_id = #{roleId}</where>
	</select>
</mapper>